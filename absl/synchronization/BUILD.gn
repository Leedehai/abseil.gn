# Copyright (c) 2020 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# Generated file. Do not modify manually.
# upstream: 2020-08-07T17:37:02-04:00 ce4bc927755fdf0ed03d679d9c7fa041175bb3cb
# file: absl/synchronization/BUILD.bazel

# absl/synchronization/BUILD.bazel:30
source_set("graphcycles_internal") {
  visibility = ["$abseil/:*"]
  sources = ["internal/graphcycles.cc"]
  public = ["internal/graphcycles.h"]
  deps = [
    "$abseil/absl/base",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:malloc_internal",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/synchronization/BUILD.bazel:53
source_set("kernel_timeout_internal") {
  visibility = ["$abseil/:*"]
  public = ["internal/kernel_timeout.h"]
  deps = [
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/time",
  ]
}

# absl/synchronization/BUILD.bazel:68
source_set("synchronization") {
  public = [
    "barrier.h",
    "blocking_counter.h",
    "internal/create_thread_identity.h",
    "internal/mutex_nonprod.inc",
    "internal/per_thread_sem.h",
    "internal/waiter.h",
    "mutex.h",
    "notification.h",
  ]
  deps = [
    ":graphcycles_internal",
    ":kernel_timeout_internal",
    "$abseil/absl/base",
    "$abseil/absl/base:atomic_hook",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:dynamic_annotations",
    "$abseil/absl/base:malloc_internal",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/debugging:stacktrace",
    "$abseil/absl/debugging:symbolize",
    "$abseil/absl/time",
  ]
}

# absl/synchronization/BUILD.bazel:168
source_set("thread_pool") {
  testonly = true
  public = ["internal/thread_pool.h"]
  deps = [
    ":synchronization",
    "$abseil/absl/base:core_headers",
  ]
}

# absl/synchronization/BUILD.bazel:202
source_set("mutex_benchmark_common") {
  testonly = true
  sources = ["mutex_benchmark.cc"]
  deps = [
    ":synchronization",
    ":thread_pool",
    "@com_github_google_benchmark/:benchmark_main",
    "$abseil/absl/base",
    "$abseil/absl/base:config",
  ]
}

# absl/synchronization/BUILD.bazel:245
source_set("per_thread_sem_test_common") {
  testonly = true
  sources = ["internal/per_thread_sem_test.cc"]
  deps = [
    ":synchronization",
    "@com_google_googletest/:gtest",
    "$abseil/absl/base",
    "$abseil/absl/base:config",
    "$abseil/absl/strings",
    "$abseil/absl/time",
  ]
}
