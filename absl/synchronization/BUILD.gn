# Copyright (c) 2020 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# -----
# Generated file. Do not modify manually.
# upstream: 2020-08-14T18:40:01-04:00 d0c433455801e1c1fb6f486f0b447e22f946ab52
# file: absl/synchronization/BUILD.bazel

# absl/synchronization/BUILD.bazel:30
source_set("graphcycles_internal") {
  visibility = ["$abseil/:*"]
  public = ["internal/graphcycles.h"]
  sources = ["internal/graphcycles.cc"]
  deps = [
    "$abseil/absl/base",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:malloc_internal",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/synchronization/BUILD.bazel:53
source_set("kernel_timeout_internal") {
  visibility = ["$abseil/:*"]
  public = ["internal/kernel_timeout.h"]
  deps = [
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/time",
  ]
}

# absl/synchronization/BUILD.bazel:68
source_set("synchronization") {
  public = [
    "barrier.h",
    "blocking_counter.h",
    "internal/create_thread_identity.h",
    "internal/mutex_nonprod.inc",
    "internal/per_thread_sem.h",
    "internal/waiter.h",
    "mutex.h",
    "notification.h",
  ]
  sources = [
    "barrier.cc",
    "blocking_counter.cc",
    "internal/create_thread_identity.cc",
    "internal/per_thread_sem.cc",
    "internal/waiter.cc",
    "mutex.cc",
    "notification.cc",
  ]
  deps = [
    ":graphcycles_internal",
    ":kernel_timeout_internal",
    "$abseil/absl/base",
    "$abseil/absl/base:atomic_hook",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:dynamic_annotations",
    "$abseil/absl/base:malloc_internal",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/debugging:stacktrace",
    "$abseil/absl/debugging:symbolize",
    "$abseil/absl/time",
  ]
  ldflags = ["-pthread"]
}
