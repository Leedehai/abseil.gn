# Copyright (c) 2021 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# -----
# Generated file. Do not modify manually.
# Source file: absl/random/internal/BUILD.bazel

# absl/random/internal:distribution_caller
source_set("distribution_caller") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["distribution_caller.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/utility:utility",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:fast_uniform_bits
source_set("fast_uniform_bits") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["fast_uniform_bits.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:fastmath
source_set("fastmath") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["fastmath.h"]
  deps = ["$abseil/absl/numeric:bits"]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:generate_real
source_set("generate_real") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["generate_real.h"]
  deps = [
    ":fastmath",
    ":traits",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/numeric:bits",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:iostream_state_saver
source_set("iostream_state_saver") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["iostream_state_saver.h"]
  deps = [
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/numeric:int128",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:mock_helpers
source_set("mock_helpers") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["mock_helpers.h"]
  deps = [
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/types:optional",
  ]
}

# absl/random/internal:nanobenchmark
source_set("nanobenchmark") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  sources = ["nanobenchmark.cc"]
  deps = [
    ":platform",
    ":randen_engine",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/random/internal:nonsecure_base
source_set("nonsecure_base") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["nonsecure_base.h"]
  deps = [
    ":pool_urbg",
    ":salted_seed_seq",
    ":seed_material",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:pcg_engine
source_set("pcg_engine") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["pcg_engine.h"]
  deps = [
    ":fastmath",
    ":iostream_state_saver",
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/numeric:bits",
    "$abseil/absl/numeric:int128",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:platform
source_set("platform") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["randen_traits.h"]
  sources = ["randen_round_keys.cc"]
  deps = ["$abseil/absl/base:config"]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:pool_urbg
source_set("pool_urbg") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["pool_urbg.h"]
  sources = ["pool_urbg.cc"]
  deps = [
    ":randen",
    ":seed_material",
    ":traits",
    "$abseil/absl/base:base",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:endian",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/random:seed_gen_exception",
    "$abseil/absl/types:span",
  ]
  cflags = ["-Wno-gcc-compat"]
  ldflags = ["-pthread"]
}

# absl/random/internal:randen
source_set("randen") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["randen.h"]
  sources = ["randen.cc"]
  deps = [
    ":platform",
    ":randen_hwaes",
    ":randen_slow",
    "$abseil/absl/base:raw_logging_internal",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:randen_engine
source_set("randen_engine") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["randen_engine.h"]
  deps = [
    ":iostream_state_saver",
    ":randen",
    "$abseil/absl/base:endian",
    "$abseil/absl/meta:type_traits",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:randen_hwaes
source_set("randen_hwaes") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = [
    "randen_detect.h",
    "randen_hwaes.h",
  ]
  sources = ["randen_detect.cc"]
  deps = [
    ":platform",
    ":randen_hwaes_impl",
    "$abseil/absl/base:config",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:randen_hwaes_impl
source_set("randen_hwaes_impl") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  sources = [
    "randen_hwaes.cc",
    "randen_hwaes.h",
  ]
  deps = [
    ":platform",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
  ]
  cflags = [
    "-Wno-gcc-compat",
    "-Wno-pass-failed",
    "-maes",
    "-msse4.1",
  ]
}

# absl/random/internal:randen_slow
source_set("randen_slow") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["randen_slow.h"]
  sources = ["randen_slow.cc"]
  deps = [
    ":platform",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:salted_seed_seq
source_set("salted_seed_seq") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["salted_seed_seq.h"]
  deps = [
    ":seed_material",
    "$abseil/absl/container:inlined_vector",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:seed_material
source_set("seed_material") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["seed_material.h"]
  sources = ["seed_material.cc"]
  deps = [
    ":fast_uniform_bits",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/strings:strings",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:traits
source_set("traits") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["traits.h"]
  deps = ["$abseil/absl/base:config"]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:uniform_helper
source_set("uniform_helper") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["uniform_helper.h"]
  deps = [
    ":traits",
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/random/internal:wide_multiply
source_set("wide_multiply") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["wide_multiply.h"]
  deps = [
    ":traits",
    "$abseil/absl/base:config",
    "$abseil/absl/numeric:bits",
    "$abseil/absl/numeric:int128",
  ]
  cflags = ["-Wno-gcc-compat"]
}
