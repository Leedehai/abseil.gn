# Copyright (c) 2020 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# Generated file. Do not modify manually.
# upstream: 2020-08-07T17:37:02-04:00 ce4bc927755fdf0ed03d679d9c7fa041175bb3cb
# file: absl/random/internal/BUILD.bazel

# absl/random/internal/BUILD.bazel:35
source_set("traits") {
  visibility = ["$abseil/:*"]
  public = ["traits.h"]
  deps = ["$abseil/absl/base:config"]
}

# absl/random/internal/BUILD.bazel:43
source_set("distribution_caller") {
  visibility = ["$abseil/:*"]
  public = ["distribution_caller.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/utility",
  ]
}

# absl/random/internal/BUILD.bazel:55
source_set("fast_uniform_bits") {
  visibility = ["$abseil/:*"]
  public = ["fast_uniform_bits.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
  ]
}

# absl/random/internal/BUILD.bazel:68
source_set("seed_material") {
  visibility = ["$abseil/:*"]
  sources = ["seed_material.cc"]
  public = ["seed_material.h"]
  deps = [
    ":fast_uniform_bits",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/strings",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
}

# absl/random/internal/BUILD.bazel:91
source_set("pool_urbg") {
  visibility = ["$abseil/:*"]
  sources = ["pool_urbg.cc"]
  public = ["pool_urbg.h"]
  deps = [
    ":randen",
    ":seed_material",
    ":traits",
    "$abseil/absl/base",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:endian",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/random:seed_gen_exception",
    "$abseil/absl/types:span",
  ]
}

# absl/random/internal/BUILD.bazel:119
source_set("explicit_seed_seq") {
  visibility = ["$abseil/:*"]
  testonly = true
  public = ["explicit_seed_seq.h"]
  deps = ["$abseil/absl/base:config"]
}

# absl/random/internal/BUILD.bazel:130
source_set("sequence_urbg") {
  visibility = ["$abseil/:*"]
  testonly = true
  public = ["sequence_urbg.h"]
  deps = ["$abseil/absl/base:config"]
}

# absl/random/internal/BUILD.bazel:141
source_set("salted_seed_seq") {
  visibility = ["$abseil/:*"]
  public = ["salted_seed_seq.h"]
  deps = [
    ":seed_material",
    "$abseil/absl/container:inlined_vector",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
}

# absl/random/internal/BUILD.bazel:157
source_set("iostream_state_saver") {
  visibility = ["$abseil/:*"]
  public = ["iostream_state_saver.h"]
  deps = [
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/numeric:int128",
  ]
}

# absl/random/internal/BUILD.bazel:168
source_set("generate_real") {
  visibility = ["$abseil/:*"]
  public = ["generate_real.h"]
  deps = [
    ":fastmath",
    ":traits",
    "$abseil/absl/base:bits",
    "$abseil/absl/meta:type_traits",
  ]
}

# absl/random/internal/BUILD.bazel:183
source_set("fastmath") {
  visibility = ["$abseil/:*"]
  public = ["fastmath.h"]
  deps = ["$abseil/absl/base:bits"]
}

# absl/random/internal/BUILD.bazel:193
source_set("wide_multiply") {
  visibility = ["$abseil/:*"]
  public = ["wide_multiply.h"]
  deps = [
    ":traits",
    "$abseil/absl/base:bits",
    "$abseil/absl/base:config",
    "$abseil/absl/numeric:int128",
  ]
}

# absl/random/internal/BUILD.bazel:206
source_set("nonsecure_base") {
  visibility = ["$abseil/:*"]
  public = ["nonsecure_base.h"]
  deps = [
    ":pool_urbg",
    ":salted_seed_seq",
    ":seed_material",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/types:optional",
    "$abseil/absl/types:span",
  ]
}

# absl/random/internal/BUILD.bazel:222
source_set("pcg_engine") {
  visibility = ["$abseil/:*"]
  public = ["pcg_engine.h"]
  deps = [
    ":fastmath",
    ":iostream_state_saver",
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/numeric:int128",
  ]
}

# absl/random/internal/BUILD.bazel:236
source_set("randen_engine") {
  visibility = ["$abseil/:*"]
  public = ["randen_engine.h"]
  deps = [
    ":iostream_state_saver",
    ":randen",
    "$abseil/absl/meta:type_traits",
  ]
}

# absl/random/internal/BUILD.bazel:248
source_set("platform") {
  visibility = ["$abseil/:*"]
  sources = ["randen_round_keys.cc"]
  public = ["randen_traits.h"]
  deps = ["$abseil/absl/base:config"]
}

# absl/random/internal/BUILD.bazel:264
source_set("randen") {
  visibility = ["$abseil/:*"]
  sources = ["randen.cc"]
  public = ["randen.h"]
  deps = [
    ":platform",
    ":randen_hwaes",
    ":randen_slow",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/random/internal/BUILD.bazel:282
source_set("randen_slow") {
  visibility = ["$abseil/:*"]
  sources = ["randen_slow.cc"]
  public = ["randen_slow.h"]
  deps = [
    ":platform",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
  ]
}

# absl/random/internal/BUILD.bazel:297
source_set("randen_hwaes") {
  visibility = ["$abseil/:*"]
  sources = ["randen_detect.cc"]
  public = [
    "randen_detect.h",
    "randen_hwaes.h",
  ]
  deps = [
    ":platform",
    ":randen_hwaes_impl",
    "$abseil/absl/base:config",
  ]
}

# absl/random/internal/BUILD.bazel:316
source_set("randen_hwaes_impl") {
  visibility = ["$abseil/:*"]
  sources = [
    "randen_hwaes.cc",
    "randen_hwaes.h",
  ]
  deps = [
    ":platform",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
  ]
}

# absl/random/internal/BUILD.bazel:346
source_set("distribution_test_util") {
  visibility = ["$abseil/:*"]
  testonly = true
  sources = [
    "chi_square.cc",
    "distribution_test_util.cc",
  ]
  public = [
    "chi_square.h",
    "distribution_test_util.h",
  ]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
    "$abseil/absl/strings",
    "$abseil/absl/strings:str_format",
    "$abseil/absl/types:span",
  ]
}

# absl/random/internal/BUILD.bazel:487
source_set("mock_helpers") {
  visibility = ["$abseil/:*"]
  public = ["mock_helpers.h"]
  deps = [
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/types:optional",
  ]
}

# absl/random/internal/BUILD.bazel:496
source_set("mock_overload_set") {
  visibility = ["$abseil/:*"]
  testonly = true
  public = ["mock_overload_set.h"]
  deps = [
    ":mock_helpers",
    "@com_google_googletest/:gtest",
    "$abseil/absl/random:mocking_bit_gen",
  ]
}

# absl/random/internal/BUILD.bazel:643
source_set("nanobenchmark") {
  visibility = ["$abseil/:*"]
  sources = ["nanobenchmark.cc"]
  deps = [
    ":platform",
    ":randen_engine",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/random/internal/BUILD.bazel:657
source_set("uniform_helper") {
  visibility = ["$abseil/:*"]
  public = ["uniform_helper.h"]
  deps = [
    ":traits",
    "$abseil/absl/base:config",
    "$abseil/absl/meta:type_traits",
  ]
}
