# Copyright (c) 2020 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# -----
# Generated file. Do not modify manually.
# upstream: 2020-08-14T18:40:01-04:00 d0c433455801e1c1fb6f486f0b447e22f946ab52
# file: absl/random/BUILD.bazel

# absl/random:bit_gen_ref
source_set("bit_gen_ref") {
  public = ["bit_gen_ref.h"]
  deps = [
    ":random",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/random/internal:distribution_caller",
    "$abseil/absl/random/internal:fast_uniform_bits",
  ]
}

# absl/random:distributions
source_set("distributions") {
  public = [
    "bernoulli_distribution.h",
    "beta_distribution.h",
    "discrete_distribution.h",
    "distributions.h",
    "exponential_distribution.h",
    "gaussian_distribution.h",
    "log_uniform_int_distribution.h",
    "poisson_distribution.h",
    "uniform_int_distribution.h",
    "uniform_real_distribution.h",
    "zipf_distribution.h",
  ]
  sources = [
    "discrete_distribution.cc",
    "gaussian_distribution.cc",
  ]
  deps = [
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/random/internal:distribution_caller",
    "$abseil/absl/random/internal:fast_uniform_bits",
    "$abseil/absl/random/internal:fastmath",
    "$abseil/absl/random/internal:generate_real",
    "$abseil/absl/random/internal:iostream_state_saver",
    "$abseil/absl/random/internal:traits",
    "$abseil/absl/random/internal:uniform_helper",
    "$abseil/absl/random/internal:wide_multiply",
    "$abseil/absl/strings:strings",
  ]
}

# absl/random:random
source_set("random") {
  public = ["random.h"]
  deps = [
    ":distributions",
    ":seed_sequences",
    "$abseil/absl/random/internal:nonsecure_base",
    "$abseil/absl/random/internal:pcg_engine",
    "$abseil/absl/random/internal:pool_urbg",
    "$abseil/absl/random/internal:randen_engine",
  ]
}

# absl/random:seed_gen_exception
source_set("seed_gen_exception") {
  public = ["seed_gen_exception.h"]
  sources = ["seed_gen_exception.cc"]
  deps = ["$abseil/absl/base:config"]
}

# absl/random:seed_sequences
source_set("seed_sequences") {
  public = ["seed_sequences.h"]
  sources = ["seed_sequences.cc"]
  deps = [
    ":seed_gen_exception",
    "$abseil/absl/container:inlined_vector",
    "$abseil/absl/random/internal:nonsecure_base",
    "$abseil/absl/random/internal:pool_urbg",
    "$abseil/absl/random/internal:salted_seed_seq",
    "$abseil/absl/random/internal:seed_material",
    "$abseil/absl/types:span",
  ]
}
