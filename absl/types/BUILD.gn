# Copyright (c) 2020 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# Generated file. Do not modify manually.
# upstream: 2020-08-07T17:37:02-04:00 ce4bc927755fdf0ed03d679d9c7fa041175bb3cb
# file: absl/types/BUILD.bazel

# absl/types/BUILD.bazel:28
source_set("any") {
  public = ["any.h"]
  deps = [
    ":bad_any_cast",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/utility",
  ]
}

# absl/types/BUILD.bazel:43
source_set("bad_any_cast") {
  public = ["bad_any_cast.h"]
  deps = [
    ":bad_any_cast_impl",
    "$abseil/absl/base:config",
  ]
}

# absl/types/BUILD.bazel:54
source_set("bad_any_cast_impl") {
  sources = [
    "bad_any_cast.cc",
    "bad_any_cast.h",
  ]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/types/BUILD.bazel:100
source_set("span") {
  sources = ["internal/span.h"]
  public = ["span.h"]
  deps = [
    "$abseil/absl/algorithm",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:throw_delegate",
    "$abseil/absl/meta:type_traits",
  ]
}

# absl/types/BUILD.bazel:137
source_set("optional") {
  sources = ["internal/optional.h"]
  public = ["optional.h"]
  deps = [
    ":bad_optional_access",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/memory",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/utility",
  ]
}

# absl/types/BUILD.bazel:154
source_set("bad_optional_access") {
  sources = ["bad_optional_access.cc"]
  public = ["bad_optional_access.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/types/BUILD.bazel:166
source_set("bad_variant_access") {
  sources = ["bad_variant_access.cc"]
  public = ["bad_variant_access.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:raw_logging_internal",
  ]
}

# absl/types/BUILD.bazel:211
source_set("conformance_testing") {
  testonly = true
  public = [
    "internal/conformance_aliases.h",
    "internal/conformance_archetype.h",
    "internal/conformance_profile.h",
    "internal/conformance_testing.h",
    "internal/conformance_testing_helpers.h",
    "internal/parentheses.h",
    "internal/transform_args.h",
  ]
  deps = [
    "@com_google_googletest/:gtest",
    "$abseil/absl/algorithm:container",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/strings",
    "$abseil/absl/utility",
  ]
}

# absl/types/BUILD.bazel:249
source_set("variant") {
  sources = ["internal/variant.h"]
  public = ["variant.h"]
  deps = [
    ":bad_variant_access",
    "$abseil/absl/base:base_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/utility",
  ]
}

# absl/types/BUILD.bazel:314
source_set("compare") {
  public = ["compare.h"]
  deps = [
    "$abseil/absl/base:core_headers",
    "$abseil/absl/meta:type_traits",
  ]
}
