# Copyright (c) 2021 Leedehai. All rights reserved.
# Use of this source code is governed under the MIT license.
# -----
# Generated file. Do not modify manually.
# Source file: absl/flags/BUILD.bazel

# absl/flags:commandlineflag
source_set("commandlineflag") {
  include_dirs = ["$abseil/"]
  public = ["commandlineflag.h"]
  sources = ["commandlineflag.cc"]
  deps = [
    ":commandlineflag_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:fast_type_id",
    "$abseil/absl/strings:strings",
    "$abseil/absl/types:optional",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:commandlineflag_internal
source_set("commandlineflag_internal") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["internal/commandlineflag.h"]
  sources = ["internal/commandlineflag.cc"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:fast_type_id",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:config
source_set("config") {
  include_dirs = ["$abseil/"]
  public = [
    "config.h",
    "usage_config.h",
  ]
  sources = ["usage_config.cc"]
  deps = [
    ":path_util",
    ":program_name",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:flag
source_set("flag") {
  include_dirs = ["$abseil/"]
  public = [
    "declare.h",
    "flag.h",
  ]
  sources = [
    "flag.cc",
    "internal/flag_msvc.inc",
  ]
  deps = [
    ":config",
    ":flag_internal",
    ":reflection",
    "$abseil/absl/base:base",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/strings:strings",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:flag_internal
source_set("flag_internal") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = [
    "internal/flag.h",
    "internal/sequence_lock.h",
  ]
  sources = ["internal/flag.cc"]
  deps = [
    ":commandlineflag",
    ":commandlineflag_internal",
    ":config",
    ":marshalling",
    ":reflection",
    "$abseil/absl/base:base",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/memory:memory",
    "$abseil/absl/meta:type_traits",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
    "$abseil/absl/utility:utility",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:marshalling
source_set("marshalling") {
  include_dirs = ["$abseil/"]
  public = ["marshalling.h"]
  sources = ["marshalling.cc"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/base:log_severity",
    "$abseil/absl/strings:str_format",
    "$abseil/absl/strings:strings",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:parse
source_set("parse") {
  include_dirs = ["$abseil/"]
  public = [
    "internal/parse.h",
    "parse.h",
  ]
  sources = ["parse.cc"]
  deps = [
    ":commandlineflag",
    ":commandlineflag_internal",
    ":config",
    ":flag",
    ":flag_internal",
    ":private_handle_accessor",
    ":program_name",
    ":reflection",
    ":usage",
    ":usage_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:path_util
source_set("path_util") {
  include_dirs = ["$abseil/"]
  public = ["internal/path_util.h"]
  deps = [
    "$abseil/absl/base:config",
    "$abseil/absl/strings:strings",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:private_handle_accessor
source_set("private_handle_accessor") {
  include_dirs = ["$abseil/"]
  public = ["internal/private_handle_accessor.h"]
  sources = ["internal/private_handle_accessor.cc"]
  deps = [
    ":commandlineflag",
    ":commandlineflag_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/strings:strings",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:program_name
source_set("program_name") {
  include_dirs = ["$abseil/"]
  public = ["internal/program_name.h"]
  sources = ["internal/program_name.cc"]
  deps = [
    ":path_util",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:reflection
source_set("reflection") {
  include_dirs = ["$abseil/"]
  public = [
    "internal/registry.h",
    "reflection.h",
  ]
  sources = ["reflection.cc"]
  deps = [
    ":commandlineflag",
    ":commandlineflag_internal",
    ":config",
    ":private_handle_accessor",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/container:flat_hash_map",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:usage
source_set("usage") {
  include_dirs = ["$abseil/"]
  public = ["usage.h"]
  sources = ["usage.cc"]
  deps = [
    ":usage_internal",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/strings:strings",
    "$abseil/absl/synchronization:synchronization",
  ]
  cflags = ["-Wno-gcc-compat"]
}

# absl/flags:usage_internal
source_set("usage_internal") {
  include_dirs = ["$abseil/"]
  visibility = ["$abseil/*"]
  public = ["internal/usage.h"]
  sources = ["internal/usage.cc"]
  deps = [
    ":commandlineflag",
    ":config",
    ":flag",
    ":flag_internal",
    ":path_util",
    ":private_handle_accessor",
    ":program_name",
    ":reflection",
    "$abseil/absl/base:config",
    "$abseil/absl/base:core_headers",
    "$abseil/absl/container:flat_hash_map",
    "$abseil/absl/strings:strings",
  ]
  cflags = ["-Wno-gcc-compat"]
}
